@using System.Numerics
@using Webresume

<div class="game-body">
	
	<div class="menu"> 	
		<p id="tower-label">@coordX </p>
		<p id="tower-label">@coordY </p>
		<div class="tower-menu">
			<div class="color-select">
				<input class="btn btn-secondary btn-lg btn-block" type="button" value="Change Color" @onclick="ChangeColor" style=@selectedColor>
			</div>
			<div class="start-stop">
				<input class="btn btn-secondary btn-lg btn-block" type="button" value="Start/Stop" @onclick="PrintDictionary">
			</div>
		</div>
	</div>

	<div class="play-area" @onmousemove="@MouseMove" @onmousedown="MouseClick" >
		<div class="pylon" style="@_EnemyXCSS; @_EnemyYCSS; @selectedColor;"></div>
	</div>

</div>
<p> List Length = @tDGameManager.TowerPositions.Count()</p>
@foreach(var i in @tDGameManager.TowerPositions)
		{
			<p> Key = @i.Key</p>
			@foreach(var j in i.Value)
			{
				<p>value x = @j</p>
				
			}
		}


@code {
	TDGameManager tDGameManager { get; set; }
	public int color = 0;
	public List<string> ColorList = new List<string> { $"background-color: red", $"background-color: blue", $"background-color: green" };
	public string selectedColor = $"background-color: red";

	public int coordX { get; set; }
	public int coordY { get; set; }
	public List<string>? coord = new List<string>();
	public int towerKey = 0;


	public string _EnemyXCSS => $"left:{tDGameManager.Obstacle.Health}px";
	public string _EnemyYCSS => $"bottom:{tDGameManager.Obstacle.Speed}px";
	public string towerCSSX;
	public string towerCSSY;
	public int where => tDGameManager.Cars.StartingPosition[0]; 

	public void PrintDictionary()
	{
	}

	protected override void OnInitialized()
	{
		tDGameManager = new TDGameManager();
		tDGameManager.MainLoopCompleted += (o, e) => StateHasChanged(); //when the property changed event changes we will call state has changed
	}


	//grabs he coordinates of the mouse inside the div 
	public void MouseMove(MouseEventArgs e){

		coordX = Convert.ToInt32(e.OffsetX);
		coordY = Convert.ToInt32(e.OffsetY );

	}

	//clears the lists. Inserts the coordinates to the list then adds the list and the key to the dictionary located in the game manager. 
	public void MouseClick(MouseEventArgs e)
	{
		coord.Clear();
		coord.Add(coordX.ToString());
		coord.Add(coordY.ToString());
		tDGameManager.AddTower(towerKey, SetCoords(coordX.ToString(), coordY.ToString()));
		towerKey++;

	}

	public  void ChangeColor() //this method just changes the color of the car 
	{
		color++;
		if(color > 2)
		{
			color = 0;
		}
		selectedColor = ColorList[color];
	}
	//return a list of coordinates when called
	public List<string> SetCoords(string x, string y)
	{
		List<string> temp = new List<string>() { x, y };
		return temp;
	}

}